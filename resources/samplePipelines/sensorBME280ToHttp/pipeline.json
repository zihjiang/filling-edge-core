{
  "schemaVersion": 5,
  "version": 9,
  "pipelineId": "sensorBME280ToHttp",
  "title": "BME280 Sensor To HTTP",
  "description": "",
  "uuid": "57e15176-80c2-4b97-8a1d-82f46bd65c66",
  "configuration": [
    {
      "name": "executionMode",
      "value": "EDGE"
    },
    {
      "name": "deliveryGuarantee",
      "value": "AT_LEAST_ONCE"
    },
    {
      "name": "startEventStage",
      "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    },
    {
      "name": "stopEventStage",
      "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    },
    {
      "name": "shouldRetry",
      "value": true
    },
    {
      "name": "retryAttempts",
      "value": -1
    },
    {
      "name": "memoryLimit",
      "value": "${jvm:maxMemoryMB() * 0.85}"
    },
    {
      "name": "memoryLimitExceeded",
      "value": "LOG"
    },
    {
      "name": "notifyOnStates",
      "value": [
        "RUN_ERROR",
        "STOPPED",
        "FINISHED"
      ]
    },
    {
      "name": "emailIDs",
      "value": []
    },
    {
      "name": "constants",
      "value": [
        {
          "key": "i2cAddress",
          "value": "0x77"
        },
        {
          "key": "httpUrl",
          "value": "http://localhost:9999"
        },
        {
          "key": "sdcAppId",
          "value": "edge"
        }
      ]
    },
    {
      "name": "badRecordsHandling",
      "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    },
    {
      "name": "errorRecordPolicy",
      "value": "ORIGINAL_RECORD"
    },
    {
      "name": "workerCount",
      "value": 0
    },
    {
      "name": "clusterSlaveMemory",
      "value": 2048
    },
    {
      "name": "clusterSlaveJavaOpts",
      "value": "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    },
    {
      "name": "clusterLauncherEnv",
      "value": []
    },
    {
      "name": "mesosDispatcherURL",
      "value": null
    },
    {
      "name": "hdfsS3ConfDir",
      "value": null
    },
    {
      "name": "rateLimit",
      "value": 0
    },
    {
      "name": "maxRunners",
      "value": 0
    },
    {
      "name": "shouldCreateFailureSnapshot",
      "value": true
    },
    {
      "name": "webhookConfigs",
      "value": []
    },
    {
      "name": "sparkConfigs",
      "value": []
    },
    {
      "name": "statsAggregatorStage",
      "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    },
    {
      "name": "edgeHttpUrl",
      "value": "http://localhost:18633"
    },
    {
      "name": "runnerIdleTIme",
      "value": 60
    }
  ],
  "uiInfo": {
    "previewConfig": {
      "batchSize": 10,
      "executeLifecycleEvents": false,
      "previewSource": "CONFIGURED_SOURCE",
      "rememberMe": false,
      "showFieldType": true,
      "showHeader": false,
      "timeout": 10000,
      "writeToDestinations": false
    }
  },
  "stages": [
    {
      "instanceName": "SensorReader_01",
      "library": "streamsets-datacollector-dev-lib",
      "stageName": "com_streamsets_pipeline_stage_origin_sensorreader_SensorReaderDSource",
      "stageVersion": "1",
      "configuration": [
        {
          "name": "conf.sensorDevice",
          "value": "BMxx80"
        },
        {
          "name": "conf.i2cAddress",
          "value": "${i2cAddress}"
        },
        {
          "name": "conf.delay",
          "value": 1000
        },
        {
          "name": "stageOnRecordError",
          "value": "TO_ERROR"
        },
        {
          "name": "conf.path",
          "value": "/sys/class/thermal/thermal_zone0/temp"
        },
        {
          "name": "conf.scalingFactor",
          "value": 1000
        }
      ],
      "services": [],
      "uiInfo": {
        "description": "",
        "label": "BME280 Sensor",
        "stageType": "SOURCE",
        "xPos": 60,
        "yPos": 50
      },
      "inputLanes": [],
      "outputLanes": [
        "SensorReader_01OutputLane15112857709570"
      ],
      "eventLanes": []
    },
    {
      "instanceName": "ExpressionEvaluator_01",
      "library": "streamsets-datacollector-basic-lib",
      "stageName": "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion": "2",
      "configuration": [
        {
          "name": "expressionProcessorConfigs",
          "value": [
            {
              "expression": "${record:value('/temperature_C') * 9 / 5 + 32}",
              "fieldToSet": "/temperature_F"
            }
          ]
        },
        {
          "name": "headerAttributeConfigs",
          "value": [
            {}
          ]
        },
        {
          "name": "fieldAttributeConfigs",
          "value": [
            {
              "fieldToSet": "/"
            }
          ]
        },
        {
          "name": "stageOnRecordError",
          "value": "TO_ERROR"
        },
        {
          "name": "stageRequiredFields",
          "value": []
        },
        {
          "name": "stageRecordPreconditions",
          "value": []
        }
      ],
      "services": [],
      "uiInfo": {
        "description": "",
        "label": "Expression Evaluator 1",
        "stageType": "PROCESSOR",
        "xPos": 280,
        "yPos": 50
      },
      "inputLanes": [
        "SensorReader_01OutputLane15112857709570"
      ],
      "outputLanes": [
        "ExpressionEvaluator_01OutputLane15112860356400"
      ],
      "eventLanes": []
    },
    {
      "instanceName": "HTTPClient_01",
      "library": "streamsets-datacollector-basic-lib",
      "stageName": "com_streamsets_pipeline_stage_destination_http_HttpClientDTarget",
      "stageVersion": "3",
      "configuration": [
        {
          "name": "conf.dataGeneratorFormatConfig.charset",
          "value": "UTF-8"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvFileFormat",
          "value": "CSV"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvHeader",
          "value": "NO_HEADER"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvReplaceNewLines",
          "value": true
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvReplaceNewLinesString",
          "value": " "
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvCustomDelimiter",
          "value": "|"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvCustomEscape",
          "value": "\\"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.csvCustomQuote",
          "value": "\""
        },
        {
          "name": "conf.dataGeneratorFormatConfig.jsonMode",
          "value": "MULTIPLE_OBJECTS"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.textFieldPath",
          "value": "/text"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.textRecordSeparator",
          "value": "\\n"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.textFieldMissingAction",
          "value": "ERROR"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.textEmptyLineIfNull",
          "value": false
        },
        {
          "name": "conf.dataGeneratorFormatConfig.avroSchemaSource",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.avroSchema",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.registerSchema",
          "value": false
        },
        {
          "name": "conf.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
          "value": []
        },
        {
          "name": "conf.dataGeneratorFormatConfig.schemaRegistryUrls",
          "value": []
        },
        {
          "name": "conf.dataGeneratorFormatConfig.schemaLookupMode",
          "value": "SUBJECT"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.subject",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.subjectToRegister",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.schemaId",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.includeSchema",
          "value": true
        },
        {
          "name": "conf.dataGeneratorFormatConfig.avroCompression",
          "value": "NULL"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.binaryFieldPath",
          "value": "/"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.protoDescriptorFile",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.messageType",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.fileNameEL",
          "value": null
        },
        {
          "name": "conf.dataGeneratorFormatConfig.wholeFileExistsAction",
          "value": "TO_ERROR"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.includeChecksumInTheEvents",
          "value": false
        },
        {
          "name": "conf.dataGeneratorFormatConfig.checksumAlgorithm",
          "value": "MD5"
        },
        {
          "name": "conf.dataGeneratorFormatConfig.xmlPrettyPrint",
          "value": true
        },
        {
          "name": "conf.dataGeneratorFormatConfig.xmlValidateSchema",
          "value": false
        },
        {
          "name": "conf.dataGeneratorFormatConfig.xmlSchema",
          "value": null
        },
        {
          "name": "conf.dataFormat",
          "value": "JSON"
        },
        {
          "name": "conf.resourceUrl",
          "value": "${httpUrl}"
        },
        {
          "name": "conf.headers",
          "value": [
            {
              "key": "X-SDC-APPLICATION-ID",
              "value": "${sdcAppId}"
            }
          ]
        },
        {
          "name": "conf.httpMethod",
          "value": "POST"
        },
        {
          "name": "conf.methodExpression",
          "value": null
        },
        {
          "name": "conf.client.transferEncoding",
          "value": "CHUNKED"
        },
        {
          "name": "conf.client.httpCompression",
          "value": "NONE"
        },
        {
          "name": "conf.client.connectTimeoutMillis",
          "value": 0
        },
        {
          "name": "conf.client.readTimeoutMillis",
          "value": 0
        },
        {
          "name": "conf.client.numThreads",
          "value": 1
        },
        {
          "name": "conf.client.authType",
          "value": "NONE"
        },
        {
          "name": "conf.client.useOAuth2",
          "value": false
        },
        {
          "name": "conf.client.oauth.consumerKey",
          "value": null
        },
        {
          "name": "conf.client.oauth.consumerSecret",
          "value": null
        },
        {
          "name": "conf.client.oauth.token",
          "value": null
        },
        {
          "name": "conf.client.oauth.tokenSecret",
          "value": null
        },
        {
          "name": "conf.client.oauth2.credentialsGrantType",
          "value": null
        },
        {
          "name": "conf.client.oauth2.tokenUrl",
          "value": null
        },
        {
          "name": "conf.client.oauth2.clientId",
          "value": null
        },
        {
          "name": "conf.client.oauth2.clientSecret",
          "value": null
        },
        {
          "name": "conf.client.oauth2.username",
          "value": null
        },
        {
          "name": "conf.client.oauth2.password",
          "value": null
        },
        {
          "name": "conf.client.oauth2.resourceOwnerClientId",
          "value": null
        },
        {
          "name": "conf.client.oauth2.resourceOwnerClientSecret",
          "value": null
        },
        {
          "name": "conf.client.oauth2.algorithm",
          "value": "NONE"
        },
        {
          "name": "conf.client.oauth2.key",
          "value": null
        },
        {
          "name": "conf.client.oauth2.jwtClaims",
          "value": null
        },
        {
          "name": "conf.client.oauth2.transferEncoding",
          "value": "BUFFERED"
        },
        {
          "name": "conf.client.oauth2.additionalValues",
          "value": [
            {}
          ]
        },
        {
          "name": "conf.client.basicAuth.username",
          "value": null
        },
        {
          "name": "conf.client.basicAuth.password",
          "value": null
        },
        {
          "name": "conf.client.useProxy",
          "value": false
        },
        {
          "name": "conf.client.proxy.uri",
          "value": null
        },
        {
          "name": "conf.client.proxy.username",
          "value": null
        },
        {
          "name": "conf.client.proxy.password",
          "value": null
        },
        {
          "name": "conf.client.tlsConfig.tlsEnabled",
          "value": false
        },
        {
          "name": "conf.client.tlsConfig.keyStoreFilePath",
          "value": null
        },
        {
          "name": "conf.client.tlsConfig.keyStoreType",
          "value": "JKS"
        },
        {
          "name": "conf.client.tlsConfig.keyStorePassword",
          "value": null
        },
        {
          "name": "conf.client.tlsConfig.keyStoreAlgorithm",
          "value": "SunX509"
        },
        {
          "name": "conf.client.tlsConfig.trustStoreFilePath",
          "value": null
        },
        {
          "name": "conf.client.tlsConfig.trustStoreType",
          "value": "JKS"
        },
        {
          "name": "conf.client.tlsConfig.trustStorePassword",
          "value": null
        },
        {
          "name": "conf.client.tlsConfig.trustStoreAlgorithm",
          "value": "SunX509"
        },
        {
          "name": "conf.client.tlsConfig.useDefaultProtocols",
          "value": true
        },
        {
          "name": "conf.client.tlsConfig.protocols",
          "value": []
        },
        {
          "name": "conf.client.tlsConfig.useDefaultCiperSuites",
          "value": true
        },
        {
          "name": "conf.client.tlsConfig.cipherSuites",
          "value": []
        },
        {
          "name": "conf.client.requestLoggingConfig.enableRequestLogging",
          "value": false
        },
        {
          "name": "conf.client.requestLoggingConfig.logLevel",
          "value": "FINE"
        },
        {
          "name": "conf.client.requestLoggingConfig.verbosity",
          "value": "HEADERS_ONLY"
        },
        {
          "name": "conf.client.requestLoggingConfig.maxEntitySize",
          "value": 0
        },
        {
          "name": "conf.singleRequestPerBatch",
          "value": true
        },
        {
          "name": "conf.rateLimit",
          "value": 0
        },
        {
          "name": "conf.maxRequestCompletionSecs",
          "value": 60
        },
        {
          "name": "stageOnRecordError",
          "value": "TO_ERROR"
        },
        {
          "name": "stageRequiredFields",
          "value": []
        },
        {
          "name": "stageRecordPreconditions",
          "value": []
        }
      ],
      "services": [],
      "uiInfo": {
        "description": "",
        "label": "HTTP Client 1",
        "stageType": "TARGET",
        "xPos": 500,
        "yPos": 50
      },
      "inputLanes": [
        "ExpressionEvaluator_01OutputLane15112860356400"
      ],
      "outputLanes": [],
      "eventLanes": []
    }
  ],
  "errorStage": {
    "instanceName": "Discard_ErrorStage",
    "library": "streamsets-datacollector-basic-lib",
    "stageName": "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
    "stageVersion": "1",
    "configuration": [],
    "services": [],
    "uiInfo": {
      "description": "",
      "label": "Error Records - Discard",
      "stageType": "TARGET",
      "xPos": 280,
      "yPos": 50
    },
    "inputLanes": [],
    "outputLanes": [],
    "eventLanes": []
  },
  "statsAggregatorStage": {
    "instanceName": "WritetoDPMdirectly_StatsAggregatorStage",
    "library": "streamsets-datacollector-basic-lib",
    "stageName": "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
    "stageVersion": "1",
    "configuration": [],
    "services": [],
    "uiInfo": {
      "description": "",
      "label": "Stats Aggregator - Write to DPM directly",
      "stageType": "TARGET",
      "xPos": 720,
      "yPos": 50
    },
    "inputLanes": [],
    "outputLanes": [],
    "eventLanes": []
  },
  "previewable": false,
  "info": {
    "pipelineId": "sensorBME280ToHttp",
    "title": "BME280 Sensor To HTTP",
    "description": "",
    "created": 1526188043336,
    "lastModified": 1526188664,
    "creator": "admin",
    "lastModifier": "admin",
    "lastRev": "0",
    "uuid": "57e15176-80c2-4b97-8a1d-82f46bd65c66",
    "valid": true,
    "metadata": {
      "labels": []
    },
    "name": "sensorBME280ToHttp",
    "sdcVersion": "3.4.0-SNAPSHOT",
    "sdcId": "d67e5ea5-553a-11e8-afdc-27d45acea1fe"
  },
  "metadata": {
    "labels": []
  },
  "fragments": []
}